 ------
 Usage
 ------
 Franz Allan See
 ------
 2011-02-05
 ------

~~ Licensed to the Apache Software Foundation (ASF) under one
~~ or more contributor license agreements.  See the NOTICE file
~~ distributed with this work for additional information
~~ regarding copyright ownership.  The ASF licenses this file
~~ to you under the Apache License, Version 2.0 (the
~~ "License"); you may not use this file except in compliance
~~ with the License.  You may obtain a copy of the License at
~~
~~   http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing,
~~ software distributed under the License is distributed on an
~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~~ KIND, either express or implied.  See the License for the
~~ specific language governing permissions and limitations
~~ under the License.

~~ NOTE: For help with the syntax of this file, see:
~~ http://maven.apache.org/doxia/references/apt-format.html

Usage

 The Resources Plugin handles the copying of project resources to the output
 directory. The following examples describe the basic usage of the Plugin.

  To handle filtering this version of Maven Resources Plugin uses
  {{{http://maven.apache.org/shared/maven-filtering/index.html}Maven Filtering}} ${mavenFilteringVersion}.


* Copy resources for the main source code

+-----+
mvn resources:resources
+-----+

 Upon executing this command, the resources for your main source code,
 as specified by the \<resources> element, will be
 copied to your main build output directory. This does not affect the
 resources for your test code.

 Moreover, this goal is bound to the <<<process-resources>>> phase.


* Copy resources for the unit tests

+-----+
mvn resources:testResources
+-----+

 Like the first goal this goal copies resources, but this time for your test source code to your
 test build output directory, as specified by the \<testResources> element. 
 Also, this does not affect the resources for the main source
 code.

 Furthermore, this is bound to the <<<process-test-resources>>> phase.


* Copy resources specified by a \<resources> configuration element

+-----+
mvn resources:copy-resources
+-----+

 Rather than using the \<resources> or \<testResources> elements or their
 defaults, this uses a \<resources> element that is specified as part of the
 plugin configuration.
 
 See the examples for how to configure this.  See the Maven Model for 
 how to write \<resources> elements.